{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\pages\\\\test.js\";\nvar __jsx = React.createElement;\n// App.js\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Table from \"../components/GithubTable/TableList\";\n\nfunction Test() {\n  /* \r\n    - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to Memoize the columns data\r\n    - Here in this example, we have grouped our columns into two headers. react-table is flexible enough to create grouped table headers\r\n  */\n  const columns = useMemo(() => [{\n    // first group - TV Show\n    Header: \"TV Show\",\n    // First group columns\n    columns: [{\n      Header: \"Name\",\n      accessor: \"show.name\"\n    }, {\n      Header: \"Type\",\n      accessor: \"show.type\"\n    }]\n  }, {\n    // Second group - Details\n    Header: \"Details\",\n    // Second group columns\n    columns: [{\n      Header: \"Language\",\n      accessor: \"show.language\"\n    }, {\n      Header: \"Genre(s)\",\n      accessor: \"show.genres\"\n    }, {\n      Header: \"Runtime\",\n      accessor: \"show.runtime\"\n    }, {\n      Header: \"Status\",\n      accessor: \"show.status\"\n    }]\n  }], []);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/pages/test.js"],"names":["React","useMemo","useState","useEffect","Table","Test","columns","Header","accessor","data"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAoD,OAApD;AAEA,OAAOC,KAAP,MAAkB,qCAAlB;;AAEA,SAASC,IAAT,GAAgB;AAEd;;;;AAIA,QAAMC,OAAO,GAAGL,OAAO,CACrB,MAAM,CACJ;AACE;AACAM,IAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO;AAJX,GADI,EAgBJ;AACE;AACAD,IAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO,EASP;AACED,MAAAA,MAAM,EAAE,SADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATO,EAaP;AACED,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAbO;AAJX,GAhBI,CADe,EAyCrB,EAzCqB,CAAvB;AA4CA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEF,OAAhB;AAAyB,IAAA,IAAI,EAAEG,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeJ,IAAf","sourcesContent":["// App.js\r\nimport React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nimport Table from \"../components/GithubTable/TableList\";\r\n\r\nfunction Test() {\r\n\r\n  /* \r\n    - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to Memoize the columns data\r\n    - Here in this example, we have grouped our columns into two headers. react-table is flexible enough to create grouped table headers\r\n  */\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        // first group - TV Show\r\n        Header: \"TV Show\",\r\n        // First group columns\r\n        columns: [\r\n          {\r\n            Header: \"Name\",\r\n            accessor: \"show.name\"\r\n          },\r\n          {\r\n            Header: \"Type\",\r\n            accessor: \"show.type\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        // Second group - Details\r\n        Header: \"Details\",\r\n        // Second group columns\r\n        columns: [\r\n          {\r\n            Header: \"Language\",\r\n            accessor: \"show.language\"\r\n          },\r\n          {\r\n            Header: \"Genre(s)\",\r\n            accessor: \"show.genres\"\r\n          },\r\n          {\r\n            Header: \"Runtime\",\r\n            accessor: \"show.runtime\"\r\n          },\r\n          {\r\n            Header: \"Status\",\r\n            accessor: \"show.status\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Table columns={columns} data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}