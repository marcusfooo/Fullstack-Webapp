{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\n\nvar ProjectTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProjectTable, _React$Component);\n\n  var _super = _createSuper(ProjectTable);\n\n  function ProjectTable(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectTable);\n\n    _this = _super.call(this, props); // Don't call this.setState() here!\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ProjectTable, [{\n    key: \"componenetDidMount\",\n    value: function componenetDidMount() {\n      function fetchGithub() {\n        var query, values, url, auth, res;\n        return _regeneratorRuntime.async(function fetchGithub$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = \"\\n        query {\\n          user(login: \\\"marcusfooo\\\") {\\n            repositories(first: 100, isFork: false) {\\n              nodes {\\n                name\\n                description\\n                url\\n                primaryLanguage {name}\\n              }\\n            }\\n          }\\n        }\\n        \";\n                values = [];\n                url = \"https://api.github.com/graphql\";\n                auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n                _context.prev = 4;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(fetch(url, {\n                  method: 'POST',\n                  headers: {\n                    'Authorization': 'Bearer ' + auth,\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    query: query\n                  })\n                }));\n\n              case 7:\n                res = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                console.log('Http error', _context.t0);\n                return _context.abrupt(\"return\", res.status(500).send());\n\n              case 14:\n                _context.next = 16;\n                return _regeneratorRuntime.awrap(res.json());\n\n              case 16:\n                res = _context.sent;\n                _context.next = 19;\n                return _regeneratorRuntime.awrap(res.data.user.repositories.nodes);\n\n              case 19:\n                values = _context.sent;\n                this.setState(values);\n                console.log(values);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this, [[4, 10]], Promise);\n      }\n\n      fetchGithub();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, __jsx(Table, {\n        bordered: true,\n        style: {\n          width: \"80vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"#\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Name\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, \"Description\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Language\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"1\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Mark\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Otto\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"@mdo\")), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"2\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"Jacob\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Thornton\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"@fat\")), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"3\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"Larry\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"the Bird\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"@twitter\"))))));\n    }\n  }]);\n\n  return ProjectTable;\n}(React.Component);\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ProjectTable","props","state","fetchGithub","query","values","url","auth","method","headers","body","JSON","stringify","res","console","log","status","send","json","data","user","repositories","nodes","setState","textAlign","display","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    // Don't call this.setState() here!\r\n    this.state = {};\r\n  }\r\n\r\n  componenetDidMount() {\r\n    async function  fetchGithub() {\r\n      const query = `\r\n        query {\r\n          user(login: \"marcusfooo\") {\r\n            repositories(first: 100, isFork: false) {\r\n              nodes {\r\n                name\r\n                description\r\n                url\r\n                primaryLanguage {name}\r\n              }\r\n            }\r\n          }\r\n        }\r\n        `;\r\n      var values = []\r\n      const url = \"https://api.github.com/graphql\";\r\n      const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n      let res;\r\n    \r\n      try {\r\n        res = await fetch(url, {\r\n          method: 'POST',\r\n          headers: { \r\n            'Authorization': 'Bearer ' + auth,\r\n            'Content-Type': 'application/json'     \r\n          },\r\n          body: JSON.stringify({ query: query }),\r\n        })\r\n      } catch (err) {\r\n        console.log('Http error', err)\r\n        return res.status(500).send()\r\n      }\r\n      \r\n      res = await res.json()\r\n      var values = await res.data.user.repositories.nodes\r\n      this.setState(values)\r\n      console.log(values)\r\n    }\r\n    fetchGithub()\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div style={{textAlign:\"center\"}}> \r\n      <div style={{display: \"inline-block\"}}>\r\n      <Table bordered style={{width:\"80vw\"}}>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>Language</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n      </div>\r\n            \r\n      </div>\r\n    \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}