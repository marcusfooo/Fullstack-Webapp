{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\pages\\\\test.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nfunction Page(_ref) {\n  var _this = this;\n\n  var repos = _ref.repos;\n  return;\n\n  __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, props.repos.map(function (repo) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }, repo);\n  })));\n}\n\nPage.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/users/marcusfooo/repos'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            repos: json.map(function (entry) {\n              return entry.name;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/pages/test.js"],"names":["fetch","Page","repos","props","map","repo","getInitialProps","ctx","res","json","entry","name"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,IAAT,OAAyB;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACvB;;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACD,KAAN,CAAYE,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADiB;AAAA,GAApB,CADL,CADJ;AAOH;;AAEDJ,IAAI,CAACK,eAAL,GAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHP,KAAK,CAAC,+CAAD,CADF;;AAAA;AACfQ,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfA,UAAAA,IAFe;AAAA,2CAGd;AACLP,YAAAA,KAAK,EAAEO,IAAI,CAACL,GAAL,CAAS,UAAAM,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeV,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nfunction Page({ repos }) {\r\n  return \r\n    <div>\r\n        <ul>\r\n            {props.repos.map(repo => (\r\n                <li>{repo}</li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nPage.getInitialProps = async ctx => {\r\n  const res = await fetch('https://api.github.com/users/marcusfooo/repos')\r\n  const json = await res.json()\r\n  return { \r\n    repos: json.map(entry => entry.name)\r\n  }\r\n}\r\n\r\nexport default Page"]},"metadata":{},"sourceType":"module"}