{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\n\nclass ProjectTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const query = `\n    query {\n      user(login: \"marcusfooo\") {\n        repositories(first: 100, isFork: false) {\n          nodes {\n            name\n            description\n            url\n            primaryLanguage {name}\n          }\n        }\n      }\n    }\n    `;\n    const url = \"https://api.github.com/graphql\";\n    const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + auth,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      });\n      const json = await response.json();\n      this.setState({\n        data: json.data.user.repositories.nodes\n      });\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    console.log(this.state.data);\n    return __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      bordered: true,\n      style: {\n        width: \"80vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"#\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Description\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Language\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"1\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Mark\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Otto\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"@mdo\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"2\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Jacob\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Thornton\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"@fat\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"3\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Larry\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"the Bird\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"@twitter\"))))));\n  }\n\n}\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ProjectTable","Component","constructor","state","data","componentDidMount","query","url","auth","response","method","headers","body","JSON","stringify","json","setState","user","repositories","nodes","ok","Error","statusText","error","console","log","render","textAlign","display","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = { data: []};\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = `\r\n    query {\r\n      user(login: \"marcusfooo\") {\r\n        repositories(first: 100, isFork: false) {\r\n          nodes {\r\n            name\r\n            description\r\n            url\r\n            primaryLanguage {name}\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n  const url = \"https://api.github.com/graphql\";\r\n  const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Authorization': 'Bearer ' + auth,\r\n          'Content-Type': 'application/json'     \r\n        },\r\n        body: JSON.stringify({ query: query }),\r\n      });\r\n\r\n      const json = await response.json();\r\n      this.setState({ data: json.data.user.repositories.nodes });\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n}\r\n  render() {\r\n    console.log(this.state.data)\r\n    return (\r\n      <div style={{textAlign:\"center\"}}> \r\n      <div style={{display: \"inline-block\"}}>\r\n      <Table bordered style={{width:\"80vw\"}}>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>Language</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n      </div>\r\n            \r\n      </div>\r\n    \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}