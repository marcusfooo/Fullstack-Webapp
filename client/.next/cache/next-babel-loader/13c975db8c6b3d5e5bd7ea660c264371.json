{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\nimport ReactTable from \"react-table\";\nimport { render } from \"react-dom\";\n\nvar ProjectTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProjectTable, _React$Component);\n\n  var _super = _createSuper(ProjectTable);\n\n  function ProjectTable(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectTable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [{}]\n    };\n    _this.fetchGithub = _this.fetchGithub.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProjectTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchGithub();\n    }\n  }, {\n    key: \"fetchGithub\",\n    value: function fetchGithub() {\n      var _this2 = this;\n\n      var query = \"\\n    query {\\n      user(login: \\\"marcusfooo\\\") {\\n        repositories(first: 100, isFork: false) {\\n          nodes {\\n            name\\n            description\\n            url\\n          }\\n        }\\n      }\\n    }\\n    \";\n      var url = \"https://api.github.com/graphql\";\n      var auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + auth,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this2.setState({\n          data: res.data.user.repositories.nodes\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.data[0].url);\n      var columns = [{\n        Header: 'Name',\n        accessor: 'name'\n      }, {\n        Header: 'Description',\n        accessor: 'description'\n      }, {\n        Header: 'Language',\n        accessor: 'language'\n      }];\n      return __jsx(\"div\", {\n        style: {\n          maxWidth: \"80vw\",\n          textAlign: \"center\",\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, \"First Name\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Last Name\"), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Username\"))), this.state.data.map(function (row) {\n        return __jsx(\"tr\", {\n          scope: \"row\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }\n        }, __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 53\n          }\n        }, row.name), __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 72\n          }\n        }, row.description), __jsx(\"td\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 98\n          }\n        }, row.url));\n      })));\n    }\n  }]);\n\n  return ProjectTable;\n}(React.Component);\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ReactTable","render","ProjectTable","props","state","data","fetchGithub","bind","query","url","auth","method","headers","body","JSON","stringify","then","res","json","setState","user","repositories","nodes","console","log","columns","Header","accessor","maxWidth","textAlign","display","map","row","name","description","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAIMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAC,EAAD;AAAR,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAHiB;AAIlB;;;;wCACkB;AACjB,WAAKD,WAAL;AACF;;;kCACc;AAAA;;AACZ,UAAME,KAAK,uOAAX;AAaF,UAAMC,GAAG,GAAG,gCAAZ;AACA,UAAMC,IAAI,GAAG,0CAAb;AACAX,MAAAA,KAAK,CAACU,GAAD,EAAM;AACTE,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYF,IADtB;AAEP,0BAAgB;AAFT,SAFA;AAOTG,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,UAAAA,KAAK,EAAEA;AAAT,SAAf;AAPG,OAAN,CAAL,CASGQ,IATH,CASQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OATX,EAUGF,IAVH,CAUQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACE,QAAL,CAAc;AAACd,UAAAA,IAAI,EAAEY,GAAG,CAACZ,IAAJ,CAASe,IAAT,CAAcC,YAAd,CAA2BC;AAAlC,SAAd,CAAJ;AAAA,OAVX;AAYD;;;6BACU;AAAA;;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBI,GAA/B;AACA,UAAMgB,OAAO,GAAG,CAAC;AACfC,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,QAAQ,EAAE;AAFK,OAAD,EAIhB;AACED,QAAAA,MAAM,EAAE,aADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAJgB,EAQhB;AACED,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OARgB,CAAhB;AAYA,aACE;AAAK,QAAA,KAAK,EAAG;AAACC,UAAAA,QAAQ,EAAC,MAAV;AAAkBC,UAAAA,SAAS,EAAE,QAA7B;AAAuCC,UAAAA,OAAO,EAAC;AAA/C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADA,CADA,EAQC,KAAK1B,KAAL,CAAWC,IAAX,CAAgB0B,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eAAI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,GAAG,CAACC,IAAT,CAAhB,EAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACE,WAAT,CAAnC,EAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,GAAG,CAACvB,GAAT,CAA7D,CAAJ;AAAA,OAAvB,CARD,CADF,CADF;AAeD;;;;EAnEwBZ,KAAK,CAACsC,S;;AAuEjC,eAAejC,YAAf","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport ReactTable from \"react-table\";\r\nimport { render } from \"react-dom\";\r\n\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [{}]};\r\n    this.fetchGithub = this.fetchGithub.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    this.fetchGithub()\r\n }\r\n  fetchGithub() {    \r\n    const query = `\r\n    query {\r\n      user(login: \"marcusfooo\") {\r\n        repositories(first: 100, isFork: false) {\r\n          nodes {\r\n            name\r\n            description\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n  const url = \"https://api.github.com/graphql\";\r\n  const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: { \r\n      'Authorization': 'Bearer ' + auth,\r\n      'Content-Type': 'application/json'\r\n      \r\n    },\r\n    body: JSON.stringify({ query: query }),\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => this.setState({data: res.data.user.repositories.nodes}))\r\n\r\n}\r\n  render() {\r\n    console.log(this.state.data[0].url)\r\n    const columns = [{\r\n      Header: 'Name',\r\n      accessor: 'name'\r\n    },\r\n    {\r\n      Header: 'Description',\r\n      accessor: 'description'\r\n    },\r\n    {\r\n      Header: 'Language',\r\n      accessor: 'language'\r\n    }]\r\n    return (\r\n      <div style= {{maxWidth:\"80vw\", textAlign: \"center\", display:\"inline-block\"}}>\r\n        <Table>\r\n        <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Username</th>\r\n        </tr>\r\n      </thead>\r\n        {this.state.data.map(row => <tr scope=\"row\"><td>{row.name}</td><td>{row.description}</td><td>{row.url}</td></tr> )}\r\n        </Table>\r\n      </div>\r\n      \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}