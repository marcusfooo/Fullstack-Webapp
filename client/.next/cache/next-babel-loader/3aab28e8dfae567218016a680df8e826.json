{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\n\nclass ProjectTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [{\n        name: \"\",\n        description: \"\",\n        language: \"\"\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    const query = `\n    query {\n      user(login: \"marcusfooo\") {\n        repositories(first: 100, isFork: false) {\n          nodes {\n            name\n            description\n            url\n            primaryLanguage {name}\n          }\n        }\n      }\n    }\n    `;\n    const url = \"https://api.github.com/graphql\";\n    const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + auth,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      });\n      const json = await response.json();\n\n      if (json.data.user.repositories.nodes != null) {\n        this.setState({\n          data: json.data.user.repositories.nodes\n        });\n      }\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const data = this.state.data;\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Language',\n      accessor: 'language'\n    }];\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, __jsx(ReactTable, {\n      data: data,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"hi\"));\n  }\n\n}\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ProjectTable","Component","constructor","state","data","name","description","language","componentDidMount","query","url","auth","response","method","headers","body","JSON","stringify","json","user","repositories","nodes","setState","ok","Error","statusText","error","console","log","render","columns","Header","accessor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA0C;AACxCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAC;AACpBC,QAAAA,IAAI,EAAE,EADc;AAEpBC,QAAAA,WAAW,EAAE,EAFO;AAGpBC,QAAAA,QAAQ,EAAE;AAHU,OAAD;AAAR,KAAb;AAKD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,KAAK,GAAI;;;;;;;;;;;;;KAAf;AAcF,UAAMC,GAAG,GAAG,gCAAZ;AACA,UAAMC,IAAI,GAAG,0CAAb;;AACE,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACW,GAAD,EAAM;AAChCG,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYH,IADtB;AAEP,0BAAgB;AAFT,SAFuB;AAMhCI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,UAAAA,KAAK,EAAEA;AAAT,SAAf;AAN0B,OAAN,CAA5B;AASA,YAAMS,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;;AACA,UAAIA,IAAI,CAACd,IAAL,CAAUe,IAAV,CAAeC,YAAf,CAA4BC,KAA5B,IAAmC,IAAvC,EAA6C;AAC3C,aAAKC,QAAL,CAAc;AAAElB,UAAAA,IAAI,EAAEc,IAAI,CAACd,IAAL,CAAUe,IAAV,CAAeC,YAAf,CAA4BC;AAApC,SAAd;AACD;;AAED,UAAI,CAACT,QAAQ,CAACW,EAAd,EAAkB;AAChB,cAAMC,KAAK,CAACZ,QAAQ,CAACa,UAAV,CAAX;AACD;AACF,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACJ;;AACCG,EAAAA,MAAM,GAAG;AACP,UAAMzB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,UAAM0B,OAAO,GAAG,CAAC;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAD,EAIhB;AACED,MAAAA,MAAM,EAAE,aADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAJgB,EAQhB;AACED,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KARgB,CAAhB;AAYA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE5B,IAAlB;AAAwB,MAAA,OAAO,EAAE0B,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CADF;AAOD;;AAtEuC;;AA0E1C,eAAe9B,YAAf","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [{\r\n      name: \"\",\r\n      description: \"\",\r\n      language: \"\"\r\n    }]};\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = `\r\n    query {\r\n      user(login: \"marcusfooo\") {\r\n        repositories(first: 100, isFork: false) {\r\n          nodes {\r\n            name\r\n            description\r\n            url\r\n            primaryLanguage {name}\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n  const url = \"https://api.github.com/graphql\";\r\n  const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Authorization': 'Bearer ' + auth,\r\n          'Content-Type': 'application/json'     \r\n        },\r\n        body: JSON.stringify({ query: query }),\r\n      });\r\n\r\n      const json = await response.json();\r\n      if (json.data.user.repositories.nodes!=null) {\r\n        this.setState({ data: json.data.user.repositories.nodes });\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n}\r\n  render() {\r\n    const data = this.state.data\r\n    const columns = [{\r\n      Header: 'Name',\r\n      accessor: 'name'\r\n    },\r\n    {\r\n      Header: 'Description',\r\n      accessor: 'description'\r\n    },\r\n    {\r\n      Header: 'Language',\r\n      accessor: 'language'\r\n    }]\r\n    return (\r\n      <div>\r\n      <ReactTable data={data} columns={columns}/>\r\n      <h1>hi</h1>\r\n      </div>\r\n      \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}