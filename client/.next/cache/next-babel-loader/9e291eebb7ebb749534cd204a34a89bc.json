{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\pages\\\\test.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nfunction Page(_ref) {\n  var _this = this;\n\n  var repos = _ref.repos;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, \" \", repos.map(function (repo) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 11\n      }\n    }, (repo.name, repo.id));\n  })));\n}\n\nPage.getInitialProps = function _callee(ctx) {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/users/marcusfooo/repos'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            repos: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/pages/test.js"],"names":["fetch","Page","repos","map","repo","name","id","getInitialProps","ctx","res","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,IAAT,OAAyB;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACvB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAKA,IAAI,CAACC,IAAL,EAAWD,IAAI,CAACE,EAArB,EADgB;AAAA,GAAd,CAAN,CADG,CAAP;AAMD;;AAEDL,IAAI,CAACM,eAAL,GAAuB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHR,KAAK,CAAC,+CAAD,CADF;;AAAA;AACfS,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfA,UAAAA,IAFe;AAAA,2CAGd;AACLR,YAAAA,KAAK,EAAEQ;AADF,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeT,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nfunction Page({ repos }) {\r\n  return <div>\r\n      <ul> {repos.map(repo => (\r\n          <li>{repo.name, repo.id}</li>\r\n      ))}\r\n      </ul>\r\n  </div>\r\n}\r\n\r\nPage.getInitialProps = async ctx => {\r\n  const res = await fetch('https://api.github.com/users/marcusfooo/repos')\r\n  const json = await res.json()\r\n  return { \r\n    repos: json\r\n  }\r\n}\r\n\r\nexport default Page"]},"metadata":{},"sourceType":"module"}