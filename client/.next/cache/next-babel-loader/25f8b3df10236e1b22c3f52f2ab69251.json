{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\nimport ReactTable from \"react-table\";\nimport { render } from \"react-dom\";\n\nclass ProjectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{}]\n    };\n    this.fetchGithub = this.fetchGithub.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGithub();\n  }\n\n  fetchGithub() {\n    const query = `\n    query {\n      user(login: \"marcusfooo\") {\n        repositories(first: 100, isFork: false) {\n          nodes {\n            name\n            description\n            url\n          }\n        }\n      }\n    }\n    `;\n    const url = \"https://api.github.com/graphql\";\n    const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + auth,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      data: res.data.user.repositories.nodes\n    }));\n  }\n\n  render() {\n    console.log(this.state.data[0]);\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name'\n    }, {\n      Header: 'Description',\n      accessor: 'description'\n    }, {\n      Header: 'Language',\n      accessor: 'language'\n    }];\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"#\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"First Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Last Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Username\"))), this.state.data.map(row => __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }))));\n  }\n\n}\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ReactTable","render","ProjectTable","Component","constructor","props","state","data","fetchGithub","bind","componentDidMount","query","url","auth","method","headers","body","JSON","stringify","then","res","json","setState","user","repositories","nodes","console","log","columns","Header","accessor","map","row"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAIA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAC,EAAD;AAAR,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKF,WAAL;AACF;;AACAA,EAAAA,WAAW,GAAG;AACZ,UAAMG,KAAK,GAAI;;;;;;;;;;;;KAAf;AAaF,UAAMC,GAAG,GAAG,gCAAZ;AACA,UAAMC,IAAI,GAAG,0CAAb;AACAd,IAAAA,KAAK,CAACa,GAAD,EAAM;AACTE,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYF,IADtB;AAEP,wBAAgB;AAFT,OAFA;AAOTG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,KAAK,EAAEA;AAAT,OAAf;AAPG,KAAN,CAAL,CASGQ,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAUGF,IAVH,CAUQC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAACf,MAAAA,IAAI,EAAEa,GAAG,CAACb,IAAJ,CAASgB,IAAT,CAAcC,YAAd,CAA2BC;AAAlC,KAAd,CAVf;AAYD;;AACCxB,EAAAA,MAAM,GAAG;AACPyB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAAZ;AACA,UAAMqB,OAAO,GAAG,CAAC;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAD,EAIhB;AACED,MAAAA,MAAM,EAAE,aADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAJgB,EAQhB;AACED,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KARgB,CAAhB;AAYA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADA,CADA,EASC,KAAKxB,KAAL,CAAWC,IAAX,CAAgBwB,GAAhB,CAAoBC,GAAG,IAAI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CATD,CADF,CADF;AAgBD;;AApEuC;;AAwE1C,eAAe9B,YAAf","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport ReactTable from \"react-table\";\r\nimport { render } from \"react-dom\";\r\n\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [{}]};\r\n    this.fetchGithub = this.fetchGithub.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    this.fetchGithub()\r\n }\r\n  fetchGithub() {    \r\n    const query = `\r\n    query {\r\n      user(login: \"marcusfooo\") {\r\n        repositories(first: 100, isFork: false) {\r\n          nodes {\r\n            name\r\n            description\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n  const url = \"https://api.github.com/graphql\";\r\n  const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: { \r\n      'Authorization': 'Bearer ' + auth,\r\n      'Content-Type': 'application/json'\r\n      \r\n    },\r\n    body: JSON.stringify({ query: query }),\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => this.setState({data: res.data.user.repositories.nodes}))\r\n\r\n}\r\n  render() {\r\n    console.log(this.state.data[0])\r\n    const columns = [{\r\n      Header: 'Name',\r\n      accessor: 'name'\r\n    },\r\n    {\r\n      Header: 'Description',\r\n      accessor: 'description'\r\n    },\r\n    {\r\n      Header: 'Language',\r\n      accessor: 'language'\r\n    }]\r\n    return (\r\n      <div>\r\n        <Table>\r\n        <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Username</th>\r\n        </tr>\r\n      </thead>\r\n        {this.state.data.map(row => <th scope=\"row\"></th> )}\r\n        </Table>\r\n      </div>\r\n      \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}