{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\n\nclass ProjectTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{}]\n    };\n    this.fetchGithub = this.fetchGithub.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGithub();\n  }\n\n  fetchGithub() {\n    const query = `\n    query {\n      repos {\n        id\n        name\n        description\n        url\n        language\n      }\n    }\n    `;\n    const url = \"/graphql\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      data: res.data.repos\n    }));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        maxWidth: \"80vw\",\n        display: \"inline-block\",\n        fontFamily: \"Roboto\"\n      },\n      className: \"jsx-1539502509\" + \" \" + \"tableContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, __jsx(Table, {\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(\"thead\", {\n      style: {\n        background: \"#808080\",\n        borderStyle: \"inset\"\n      },\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"tr\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Repository Name\"), __jsx(\"th\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Description\"), __jsx(\"th\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Language\"))), this.state.data.map(row => __jsx(\"tr\", {\n      scope: \"row\",\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, __jsx(\"td\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 53\n      }\n    }, row.id), __jsx(\"td\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 70\n      }\n    }, __jsx(\"a\", {\n      href: true,\n      target: \"_blank\",\n      href: row.url,\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 74\n      }\n    }, row.name)), __jsx(\"td\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 132\n      }\n    }, row.description), __jsx(\"td\", {\n      className: \"jsx-1539502509\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 158\n      }\n    }, row.language))))), __jsx(_JSXStyle, {\n      id: \"1539502509\",\n      __self: this\n    }, \".tableContainer.jsx-1539502509{margin-bottom:2.5vh;}@media (max-width:768px){.tableContainer.jsx-1539502509{overflow:scroll;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTWFyY3VzXFxEZXNrdG9wXFxQcm9qZWN0c1xcV2Vic2l0ZVxcY2xpZW50XFxjb21wb25lbnRzXFxQcm9qZWN0VGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0RvQixBQUlpQyxBQUtBLGdCQUNwQixJQUxGIiwiZmlsZSI6IkM6XFxVc2Vyc1xcTWFyY3VzXFxEZXNrdG9wXFxQcm9qZWN0c1xcV2Vic2l0ZVxcY2xpZW50XFxjb21wb25lbnRzXFxQcm9qZWN0VGFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBUYWJsZSB9IGZyb20gJ3JlYWN0c3RyYXAnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuXHJcblxyXG5cclxuY2xhc3MgUHJvamVjdFRhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLnN0YXRlID0geyBkYXRhOiBbe31dfTtcclxuICAgIHRoaXMuZmV0Y2hHaXRodWIgPSB0aGlzLmZldGNoR2l0aHViLmJpbmQodGhpcylcclxuICB9XHJcbiAgY29tcG9uZW50RGlkTW91bnQoKXtcclxuICAgIHRoaXMuZmV0Y2hHaXRodWIoKVxyXG4gfVxyXG4gIGZldGNoR2l0aHViKCkgeyAgICBcclxuICAgIGNvbnN0IHF1ZXJ5ID0gYFxyXG4gICAgcXVlcnkge1xyXG4gICAgICByZXBvcyB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBuYW1lXHJcbiAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICB1cmxcclxuICAgICAgICBsYW5ndWFnZVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBgO1xyXG4gIGNvbnN0IHVybCA9IFwiL2dyYXBocWxcIjtcclxuICBmZXRjaCh1cmwsIHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgaGVhZGVyczogeyBcclxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyAgICAgIFxyXG4gICAgfSxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcXVlcnk6IHF1ZXJ5IH0pLFxyXG4gIH0pXHJcbiAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcclxuICAgIC50aGVuKHJlcyA9PiB0aGlzLnNldFN0YXRlKHtkYXRhOiByZXMuZGF0YS5yZXBvc30pKVxyXG5cclxufVxyXG4gIHJlbmRlcigpIHtcclxuICAgXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IHN0eWxlPXt7dGV4dEFsaWduOlwiY2VudGVyXCJ9fT5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidGFibGVDb250YWluZXJcInN0eWxlPSB7e21heFdpZHRoOlwiODB2d1wiLCBkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLCBmb250RmFtaWx5OlwiUm9ib3RvXCJ9fT5cclxuICAgICAgICA8VGFibGUgYm9yZGVyZWQ+XHJcbiAgICAgICAgPHRoZWFkIHN0eWxlPXt7YmFja2dyb3VuZDpcIiM4MDgwODBcIiwgYm9yZGVyU3R5bGU6XCJpbnNldFwifX0+XHJcbiAgICAgICAgPHRyPlxyXG4gICAgICAgICAgPHRoPklEPC90aD5cclxuICAgICAgICAgIDx0aD5SZXBvc2l0b3J5IE5hbWU8L3RoPlxyXG4gICAgICAgICAgPHRoPkRlc2NyaXB0aW9uPC90aD5cclxuICAgICAgICAgIDx0aD5MYW5ndWFnZTwvdGg+XHJcbiAgICAgICAgPC90cj5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgICB7dGhpcy5zdGF0ZS5kYXRhLm1hcChyb3cgPT4gPHRyIHNjb3BlPVwicm93XCI+PHRkPntyb3cuaWR9PC90ZD48dGQ+PGEgaHJlZiB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPXtyb3cudXJsfT57cm93Lm5hbWV9PC9hPjwvdGQ+PHRkPntyb3cuZGVzY3JpcHRpb259PC90ZD48dGQ+e3Jvdy5sYW5ndWFnZX08L3RkPjwvdHI+ICl9XHJcbiAgICAgICAgPC9UYWJsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8c3R5bGUganN4PntgXHJcblxyXG4gICAgICAgICAgLnRhYmxlQ29udGFpbmVyIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMi41dmg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgIC50YWJsZUNvbnRhaW5lciB7XHJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH0gPC9zdHlsZT5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIFxyXG4gICk7XHJcbiAgfVxyXG4gIFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9qZWN0VGFibGU7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Marcus\\\\\\\\Desktop\\\\\\\\Projects\\\\\\\\Website\\\\\\\\client\\\\\\\\components\\\\\\\\ProjectTable.js */\"));\n  }\n\n}\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ProjectTable","Component","constructor","props","state","data","fetchGithub","bind","componentDidMount","query","url","method","headers","body","JSON","stringify","then","res","json","setState","repos","render","textAlign","maxWidth","display","fontFamily","background","borderStyle","map","row","id","name","description","language"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [{}]};\r\n    this.fetchGithub = this.fetchGithub.bind(this)\r\n  }\r\n  componentDidMount(){\r\n    this.fetchGithub()\r\n }\r\n  fetchGithub() {    \r\n    const query = `\r\n    query {\r\n      repos {\r\n        id\r\n        name\r\n        description\r\n        url\r\n        language\r\n      }\r\n    }\r\n    `;\r\n  const url = \"/graphql\";\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: { \r\n      'Content-Type': 'application/json'      \r\n    },\r\n    body: JSON.stringify({ query: query }),\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => this.setState({data: res.data.repos}))\r\n\r\n}\r\n  render() {\r\n   \r\n    return (\r\n      <div style={{textAlign:\"center\"}}>\r\n        <div className = \"tableContainer\"style= {{maxWidth:\"80vw\", display: \"inline-block\", fontFamily:\"Roboto\"}}>\r\n        <Table bordered>\r\n        <thead style={{background:\"#808080\", borderStyle:\"inset\"}}>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Repository Name</th>\r\n          <th>Description</th>\r\n          <th>Language</th>\r\n        </tr>\r\n      </thead>\r\n        {this.state.data.map(row => <tr scope=\"row\"><td>{row.id}</td><td><a href target=\"_blank\" href={row.url}>{row.name}</a></td><td>{row.description}</td><td>{row.language}</td></tr> )}\r\n        </Table>\r\n        </div>\r\n        <style jsx>{`\r\n\r\n          .tableContainer {\r\n            margin-bottom: 2.5vh;\r\n          }\r\n\r\n          @media (max-width: 768px) {\r\n            .tableContainer {\r\n                overflow: scroll;\r\n            }\r\n          }\r\n        `} </style>\r\n      </div>\r\n      \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}