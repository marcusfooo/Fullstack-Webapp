{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Personal Website\\\\client\\\\components\\\\Navbar.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Navbar, NavbarToggler, NavbarBrand, Collapse, Nav, NavItem, NavLink, NavDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        navbarTogglerOpen: !_this.state.navbarTogglerOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dropDownToggle\", function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Navbar, {\n        light: true,\n        expand: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(NavbarBrand, {\n        to: \"/xxx\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"XXX\"), __jsx(NavbarToggler, {\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), __jsx(Collapse, {\n        isOpen: this.state.navbarTogglerOpen,\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, __jsx(Nav, {\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, __jsx(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, __jsx(NavLink, {\n        to: \"/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, \"Stuff\"))), __jsx(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, __jsx(NavDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.dropDownToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, __jsx(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Name or Email\"), __jsx(DropdownMenu, {\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, __jsx(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, \"My Profile\")))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nrender(__jsx(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Personal Website/client/components/Navbar.js"],"names":["React","Component","render","Navbar","NavbarToggler","NavbarBrand","Collapse","Nav","NavItem","NavLink","NavDropdown","DropdownToggle","DropdownMenu","DropdownItem","App","setState","navbarTogglerOpen","state","dropdownOpen","toggle","dropDownToggle","document","getElementById"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,GALF,EAMEC,OANF,EAOEC,OAPF,EAQEC,WARF,EASEC,cATF,EAUEC,YAVF,EAWEC,YAXF,QAYO,YAZP;;IAcMC,G;;;;;;;;;;;;;;;;4DACI,E;;6DAEC,YAAM;AACb,YAAKC,QAAL,CAAc;AAAEC,QAAAA,iBAAiB,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAjC,OAAd;AACD,K;;qEAEgB,YAAM;AACrB,YAAKD,QAAL,CAAc;AAAEG,QAAAA,YAAY,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA5B,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,MAAM,EAAC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAa,QAAA,EAAE,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,MAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWD,iBAA7B;AAAgD,QAAA,MAAM,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,GAAD;AAAK,QAAA,MAAM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,EAAE,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CADF,EAME,MAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AACE,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,YADrB;AAEE,QAAA,MAAM,EAAE,KAAKE,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,MAAC,cAAD;AAAgB,QAAA,GAAG,MAAnB;AAAoB,QAAA,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAOE,MAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAPF,CADF,CANF,CAHF,CADF,CADF;AA4BD;;;;EAxCenB,S;;AA2ClBC,MAAM,CAAC,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport {\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  toggle = () => {\r\n    this.setState({ navbarTogglerOpen: !this.state.navbarTogglerOpen });\r\n  };\r\n\r\n  dropDownToggle = () => {\r\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar light expand=\"sm\">\r\n        <div className=\"container\">\r\n          <NavbarBrand to=\"/xxx\">XXX</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.navbarTogglerOpen} navbar>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink to=\"/dashboard\">Stuff</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavDropdown\r\n                isOpen={this.state.dropdownOpen}\r\n                toggle={this.dropDownToggle}\r\n              >\r\n                <DropdownToggle nav caret>\r\n                  Name or Email\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>My Profile</DropdownItem>\r\n                </DropdownMenu>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </div>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}