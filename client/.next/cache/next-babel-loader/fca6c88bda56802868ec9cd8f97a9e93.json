{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcus\\\\Desktop\\\\Projects\\\\Website\\\\client\\\\components\\\\ProjectTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table } from 'reactstrap';\nimport fetch from 'isomorphic-unfetch';\n\nclass ProjectTable extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {};\n  }\n\n  componenetDidMount() {\n    async function fetchGithub() {\n      const query = `\n        query {\n          user(login: \"marcusfooo\") {\n            repositories(first: 100, isFork: false) {\n              nodes {\n                name\n                description\n                url\n                primaryLanguage {name}\n              }\n            }\n          }\n        }\n        `;\n      var values = [];\n      const url = \"https://api.github.com/graphql\";\n      const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\";\n      let res;\n\n      try {\n        res = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer ' + auth,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query: query\n          })\n        });\n      } catch (err) {\n        console.log('Http error', err);\n        return res.status(500).send();\n      }\n\n      res = await res.json();\n      var values = await res.data.user.repositories.nodes;\n      this.setState(values);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      bordered: true,\n      style: {\n        width: \"80vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"#\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Description\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Language\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"1\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Mark\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Otto\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"@mdo\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"2\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Jacob\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Thornton\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"@fat\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"3\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Larry\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"the Bird\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"@twitter\"))))));\n  }\n\n}\n\nexport default ProjectTable;","map":{"version":3,"sources":["C:/Users/Marcus/Desktop/Projects/Website/client/components/ProjectTable.js"],"names":["React","Table","fetch","ProjectTable","Component","constructor","props","state","componenetDidMount","fetchGithub","query","values","url","auth","res","method","headers","body","JSON","stringify","err","console","log","status","send","json","data","user","repositories","nodes","setState","render","textAlign","display","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nclass ProjectTable extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    // Don't call this.setState() here!\r\n    this.state = {};\r\n  }\r\n\r\n  componenetDidMount() {\r\n    async function  fetchGithub() {\r\n      const query = `\r\n        query {\r\n          user(login: \"marcusfooo\") {\r\n            repositories(first: 100, isFork: false) {\r\n              nodes {\r\n                name\r\n                description\r\n                url\r\n                primaryLanguage {name}\r\n              }\r\n            }\r\n          }\r\n        }\r\n        `;\r\n      var values = []\r\n      const url = \"https://api.github.com/graphql\";\r\n      const auth = \"fdb88caccccfab0e29dea3ee4843d6dd6fe48b1b\"\r\n      let res;\r\n    \r\n      try {\r\n        res = await fetch(url, {\r\n          method: 'POST',\r\n          headers: { \r\n            'Authorization': 'Bearer ' + auth,\r\n            'Content-Type': 'application/json'     \r\n          },\r\n          body: JSON.stringify({ query: query }),\r\n        })\r\n      } catch (err) {\r\n        console.log('Http error', err)\r\n        return res.status(500).send()\r\n      }\r\n      \r\n      res = await res.json()\r\n      var values = await res.data.user.repositories.nodes\r\n      this.setState(values)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{textAlign:\"center\"}}> \r\n      <div style={{display: \"inline-block\"}}>\r\n      <Table bordered style={{width:\"80vw\"}}>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>Language</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>Mark</td>\r\n          <td>Otto</td>\r\n          <td>@mdo</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">2</th>\r\n          <td>Jacob</td>\r\n          <td>Thornton</td>\r\n          <td>@fat</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">3</th>\r\n          <td>Larry</td>\r\n          <td>the Bird</td>\r\n          <td>@twitter</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n      </div>\r\n            \r\n      </div>\r\n    \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProjectTable;"]},"metadata":{},"sourceType":"module"}