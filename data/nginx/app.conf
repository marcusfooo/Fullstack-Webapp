proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

server {
  listen 80;
  server_tokens off;
  server_name marcusfoo.io www.marcusfoo.io;

    location /.well-known/acme-challenge/ {
          allow all;
          root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
  }

}

server {
    listen 443 ssl;
    server_name marcusfoo.io www.marcusfoo.io;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/marcusfoo.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/marcusfoo.io/privkey.pem;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    
    location /graphql {   
      proxy_pass http://docker-backend:8080;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;            
      }
  
    location /.next/static {
      proxy_pass http://docker-frontend:3000;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_cache STATIC;
      add_header X-Cache-Status $upstream_cache_status;
    }

    location /public {
      proxy_pass http://docker-frontend:3000;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_cache STATIC;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid 60m;
      add_header X-Cache-Status $upstream_cache_status;
    }

    location /jenkins {
      proxy_pass http://172.17.0.1:8080;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location / {
      proxy_pass http://docker-frontend:3000;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }
}